rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Contacts Collection
    match /contacts/{contactId} {
      // Allow read/write for authenticated users
      // In production, you might want more granular permissions
      allow read, write: if request.auth != null;
    }
    
    // Contact Fields Collection  
    match /contactFields/{fieldId} {
      // Allow read for all authenticated users
      allow read: if request.auth != null;
      
      // Only allow write if it's not a core field or if user is admin
      allow create, update: if request.auth != null && 
        (resource == null || resource.data.core != true);
        
      // Don't allow deletion of core fields
      allow delete: if request.auth != null && 
        resource.data.core != true;
    }
    
    // Users Collection
    match /users/{userId} {
      // Users can read all user data (needed for agent assignment)
      allow read: if request.auth != null;
      
      // Users can only create/update their own profile or admins can manage all
      allow create, update: if request.auth != null && 
        (request.auth.uid == userId || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Import Sessions Collection
    match /importSessions/{sessionId} {
      // Allow read/write for authenticated users
      // Could be restricted to session creator in production
      allow read, write: if request.auth != null;
    }
  }
}